[build-system]
requires = [
  "scikit-build-core",
  "oldest-supported-numpy",
  "cmake"
]

build-backend = "scikit_build_core.build"

[project]
name = "deviceaccess"
version = "3.3.2"
dependencies = [
  "numpy<2",
]
description = "Python bindings for the ChimeraTK's deviceaccess library"
long_description = "The package provides binding for the ChimeraTK's deviceaccess library"
requires-python = ">=3.8"
readme = "README.md"
license = {file = "LICENSE"}

classifiers = [
"Topic :: Software Development :: Libraries :: Python Modules",
"Development Status :: 5 - Production/Stable",
"License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
"Intended Audience :: Developers",
"Programming Language :: Python :: 3",
"Programming Language :: Python :: 3.8",
"Programming Language :: Python :: 3.9",
"Programming Language :: Python :: 3.10",
"Programming Language :: Python :: 3.11",
"Programming Language :: Python :: 3.12",
"Programming Language :: Python :: 3.13",
"Programming Language :: Python :: Implementation :: CPython",
"Topic :: Scientific/Engineering"
]

[project.urls]
Homepage = "https://github.com/ChimeraTK/DeviceAccess-PythonBindings"
Documentation = "https://chimeratk.github.io/ChimeraTK-DeviceAccess-PythonBindings/head/html/"
Repository = "https://github.com/ChimeraTK/DeviceAccess-PythonBindings"

[tool.scikit-build.wheel.packages]
deviceaccess = "src/deviceaccess"
mtca4u = "src/mtca4u"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.4"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

[tool.cibuildwheel]
before-all = "bash pre_build_manylinux.sh"
skip = "cp36-* cp37-* *-musllinux* pp* *-win32 *_i686"
manylinux-x86_64-image = "manylinux_2_28"
manylinux-i686-image = "manylinux2_2_28"
manylinux-aarch64-image = "manylinux2_2_28"

# Necessary to see build output from the actual compilation
build-verbosity = 1

## Run pytest to ensure that the package was correctly built
test-skip = "*"

[tool.cibuildwheel.linux.environment]
# Enable backends compilation
DEVICEACCESS_BACKEND_ENABLE="1"

# Dependencies versions
YAJL_VERSION="2.1.0"
EPICS_VERSION="R7.0.8"
CHIMERATK_EPICS_VERSION="01.00.00"
OPEN62541_VERSION="v1.3.1"
LIBTIRPC_VERSION="1.3.4"
TINE_VERSION="08ca83228932c3b08caf3b4c6578f1da8e65f5c5"
DOOCS_VERSION="DOOCSVERSION_24_3_1"
DOOCS_SERVER_TEST_HELPER_VERSION="01.07.00"
CPPEXT_VERSION="01.05.02"
EXPRTK_VERSION="01.04.01"
NLOHMANN_JSON_VERSION="v3.7.3"
DEVICEACCESS_VERSION="03.15.02"
DEVICEACCESS_EPICS_VERSION="01.00.00"
DEVICEACCESS_OPCUA_VERSION="01.03.00"
DEVICEACCESS_DOOCS_VERSION="01.09.01"
DEVICEACCESS_MODBUS_VERSION="01.05.00"

# Add the build directory to the environment variables
BUILD_DIR="${HOME}/build"
PKG_CONFIG_PATH="${BUILD_DIR}/local/lib/pkgconfig/:${BUILD_DIR}/EPICS/epics-base/lib/pkgconfig/:/usr/lib/pkgconfig:${PKG_CONFIG_PATH}"
LD_LIBRARY_PATH="${BUILD_DIR}/local/lib/:${BUILD_DIR}/EPICS/epics-base/lib/linux-x86_64/:${LD_LIBRARY_PATH}"
PATH="${BUILD_DIR}/local/bin/:${PATH}"

